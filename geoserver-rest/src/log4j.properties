#log4j.rootLogger=[level],[Appender1],[Appender2],[Appender3]....
#这一句的意思就是设置日志输出级别以及输出目的地，可以设置多个输出目的地，
# 以逗号分隔，输出目的地的详细设置为下面的Appender设置.
# 注意：此处设置的Appender名称应与下面详细设置相对应，包括大小写；
# 此处配置了几个Appender，下面就应设置几个。
log4j.rootLogger=DEBUG, STDOUT,INF,ERR,HHT,SL,TCC

# 输出目的地详细设置：
#定义对应输出目的地：log4j.appender.appenderName = fully.qualified.name.of.appender.class.
#### ConsoleAppender:控制台输出 ####
log4j.appender.STDOUT = org.apache.log4j.ConsoleAppender 
# 输出到控制台
log4j.appender.STDOUT.Target = System.out
# 指定控制台输出日志级别
log4j.appender.STDOUT.Threshold = INFO
# 默认值是 true, 表示是否立即输出
log4j.appender.STDOUT.ImmediateFlush = true
# 设置编码方式
log4j.appender.STDOUT.Encoding = UTF-8
# 日志输出布局
log4j.appender.STDOUT.layout = org.apache.log4j.PatternLayout
# 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
log4j.appender.STDOUT.layout.ConversionPattern =[%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n

#### DailyRollingFileAppender: 指定周期输出到新文件 ####
log4j.appender.INF = org.apache.log4j.DailyRollingFileAppender 
# 指定输出文件路径
log4j.appender.INF.File = D:/log/info.log
# 指定输出日志级别
log4j.appender.INF.Threshold = INFO
# 默认为true,意味着输出方式为追加，反之则为覆盖
log4j.appender.INF.Append = true
# 默认值是 true, 表示是否立即输出
log4j.appender.INF.ImmediateFlush = true
# 设置编码方式
log4j.appender.INF.Encoding = UTF-8
# 指定分隔周期：月，周，天，时，分
# '.': 每月
# '.'yyyy-ww: 每周
# '.'yyyy-MM-dd: 每天
# '.'yyyy-MM-dd-a: 每天两次
# '.'yyyy-MM-dd-HH: 每小时
# '.'yyyy-MM-dd-HH-mm: 每分钟
log4j.appender.INF.DatePattern ='.'yyyy-MM-dd-HH-mm
# 日志输出布局
log4j.appender.INF.layout = org.apache.log4j.PatternLayout
# 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
log4j.appender.INF.layout.ConversionPattern =DFA-[framework] [%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n


#### RollingFileAppender: 限定单个文件大小，达到阀值输出到新文件 ####
log4j.appender.ERR = org.apache.log4j.RollingFileAppender 
# 指定输出文件路径
log4j.appender.ERR.File = D:/log/error.log
# 指定输出日志级别
log4j.appender.ERR.Threshold = INFO
# 默认为true,意味着输出方式为追加，反之则为覆盖
log4j.appender.ERR.Append = true
# 默认值是 true, 表示是否立即输出
log4j.appender.ERR.ImmediateFlush = true
# 设置编码方式
log4j.appender.ERR.Encoding = UTF-8
# 设置单个文件大小限制
log4j.appender.ERR.MaxFileSize = 2MB
# 设置最大备份文件记录数
log4j.appender.ERR.MaxBackupIndex = 20
# 日志输出布局
log4j.appender.ERR.layout = org.apache.log4j.PatternLayout
# 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
log4j.appender.ERR.layout.ConversionPattern =RFA-[framework] [%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n


####测试输出布局：HTMLLayout ####
log4j.appender.HHT = org.apache.log4j.RollingFileAppender 
# 指定输出文件路径
log4j.appender.HHT.File = D:/log/log4jHtml.html
# 指定输出日志级别
log4j.appender.HHT.Threshold = DEBUG
# 默认为true,意味着输出方式为追加，反之则为覆盖
log4j.appender.HHT.Append = true
# 默认值是 true, 表示是否立即输出
log4j.appender.HHT.ImmediateFlush = true
# 设置编码方式
log4j.appender.HHT.Encoding = UTF-8
# 设置单个文件大小限制
log4j.appender.HHT.MaxFileSize = 2MB
# 设置最大备份文件记录数
log4j.appender.HHT.MaxBackupIndex = 20
# 日志输出布局
log4j.appender.HHT.layout = org.apache.log4j.HTMLLayout

####测试输出布局：SimpleLayout ####
log4j.appender.SL = org.apache.log4j.RollingFileAppender 
# 指定输出文件路径
log4j.appender.SL.File = D:/log/log4jSL.html
# 指定输出日志级别
log4j.appender.SL.Threshold = INFO
# 默认为true,意味着输出方式为追加，反之则为覆盖
log4j.appender.SL.Append = true
# 默认值是 true, 表示是否立即输出
log4j.appender.SL.ImmediateFlush = true
# 设置编码方式
log4j.appender.SL.Encoding = UTF-8
# 设置单个文件大小限制
log4j.appender.SL.MaxFileSize = 2MB
# 设置最大备份文件记录数
log4j.appender.SL.MaxBackupIndex = 20
# 日志输出布局
log4j.appender.SL.layout = org.apache.log4j.HTMLLayout


####测试输出布局：TTCCLayout ####
log4j.appender.TCC = org.apache.log4j.RollingFileAppender 
# 指定输出文件路径
log4j.appender.TCC.File = D:/log/log4jTCC.log
# 指定输出日志级别
log4j.appender.TCC.Threshold = INFO
# 默认为true,意味着输出方式为追加，反之则为覆盖
log4j.appender.TCC.Append = true
# 默认值是 true, 表示是否立即输出
log4j.appender.TCC.ImmediateFlush = true
# 设置编码方式
log4j.appender.TCC.Encoding = UTF-8
# 设置单个文件大小限制
log4j.appender.TCC.MaxFileSize = 2MB
# 设置最大备份文件记录数
log4j.appender.TCC.MaxBackupIndex = 20
# 日志输出布局
log4j.appender.TCC.layout = org.apache.log4j.SimpleLayout

